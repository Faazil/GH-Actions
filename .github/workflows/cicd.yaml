name: CICD Workflow

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment'
        required: true
        default: '1loc'

jobs:
  validate-and-deploy:
    runs-on: rhel999
    outputs:
      AEM_HOST: ${{ steps.extract_url.outputs.AEM_HOST }}
      AEM_HOST_AUTHOR: ${{ steps.extract_url.outputs.AEM_HOST_AUTHOR }}
      AEM_HOST_PREVIEW: ${{ steps.extract_url.outputs.AEM_HOST_PREVIEW }}
      AEM_CREDENTIALS: ${{ steps.set-credentials.outputs.AEM_CREDENTIALS }}
      AEM_PACKAGE_NAME: ${{ steps.set-package-name.outputs.AEM_PACKAGE_NAME }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Validate Environment Input
        id: validate
        run: |
          VALID_ENVIRONMENTS=("1eng" "1test" "1prod" "1loc" "ess-prod" "ess-prod-live")
          INPUT_ENVIRONMENT=$(echo "${{ github.event.inputs.environment }}" | tr '[:upper:]' '[:lower:]')
          if [[ " ${VALID_ENVIRONMENTS[@]} " =~ " ${INPUT_ENVIRONMENT} " ]]; then
            echo "Environment input is valid: ${INPUT_ENVIRONMENT}"
            echo "environment=${INPUT_ENVIRONMENT}" >> $GITHUB_OUTPUT
          else
            echo "Invalid environment input: ${INPUT_ENVIRONMENT}"
            exit 1
          fi

      - name: Ensure env_urls.yaml is available
        run: |
          if [ ! -f .github/env_urls.yaml ]; then
            echo "env_urls.yaml not found in the repository."
            exit 1
          fi

      - name: Extract Environment URL
        id: extract_url
        run: |
          environment=${{ steps.validate.outputs.environment }}
          if [[ "$environment" == *"prod-live"* ]]; then
            url=$(awk -F": " '/ess-prod:/{print $2}' .github/env_urls.yaml)
            echo "Prod-live environment detected, URL: $url"
            echo "AEM_HOST_AUTHOR=$url" >> $GITHUB_ENV
            echo "::set-output name=AEM_HOST_AUTHOR::$url"
          elif [[ "$environment" == *"prod"* ]] && [[ "$environment" != *"live"* ]]; then
            url_author=$(awk -F": " '/ess-prod:/{print $2}' .github/env_urls.yaml)
            url_preview=$(awk -F": " '/ess-prod-preview:/{print $2}' .github/env_urls.yaml)
            echo "Prod environment detected, URLs: $url_author, $url_preview"
            echo "AEM_HOST_AUTHOR=$url_author" >> $GITHUB_ENV
            echo "AEM_HOST_PREVIEW=$url_preview" >> $GITHUB_ENV
            echo "::set-output name=AEM_HOST_AUTHOR::$url_author"
            echo "::set-output name=AEM_HOST_PREVIEW::$url_preview"
          else
            url=$(awk -v env="$environment" 'BEGIN {FS=": "; OFS=": "} $1 ~ "^ *"env"$" {gsub(/^ *| *$/, "", $2); print $2}' .github/env_urls.yaml)
            echo "General environment detected, URL: $url"
            if [ -z "$url" ]; then
              echo "Invalid environment: $environment"
              exit 1
            fi
            echo "AEM_HOST=$url" >> $GITHUB_ENV
            echo "::set-output name=AEM_HOST::$url"
          fi

      - name: Set AEM Credentials
        id: set-credentials
        run: echo "::set-output name=AEM_CREDENTIALS::${{ secrets.AEM_CREDENTIALS }}"

      - name: Set AEM Package Name
        id: set-package-name
        run: echo "::set-output name=AEM_PACKAGE_NAME::we.retail.community.apps-1.11.84.zip"

      - name: Check variable
        run: echo $AEM_HOST

      - name: Upload package artifact
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: we.retail.community.apps-1.11.84.zip

  upload-aem-package:
    needs: validate-and-deploy
    uses: Faazil/Common/.github/workflows/deployment.yaml@main  # Assuming this points to your reusable workflow location
    with:
      AEM_CREDENTIALS: ${{ needs.validate-and-deploy.outputs.AEM_CREDENTIALS }}
      AEM_PACKAGE_NAME: ${{ needs.validate-and-deploy.outputs.AEM_PACKAGE_NAME }}
      AEM_HOST: ${{ needs.validate-and-deploy.outputs.AEM_HOST }}
      AEM_HOST_AUTHOR: ${{ needs.validate-and-deploy.outputs.AEM_HOST_AUTHOR }}
      AEM_HOST_PREVIEW: ${{ needs.validate-and-deploy.outputs.AEM_HOST_PREVIEW }}
